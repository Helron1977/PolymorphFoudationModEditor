@startuml

title __DATAGENERATOR's Class Diagram__\n


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        class helron.foundationwizard.com.datagenerator.DataStructure {
            - id : String
            + DataStructure()
            + getDataStructureType()
            + getId()
            + setDataType()
            + setId()
        }
      }
    }

  


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        class helron.foundationwizard.com.datagenerator.DataStructureAsset {
            ~ assetNames : List<String>
            + DataStructureAsset()
            + getAssetNames()
            + setAssetNames()
        }
      }
    }

  


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        class helron.foundationwizard.com.datagenerator.DataStructureClass {
            - parameterList : List<Parameter>
            + DataStructureClass()
            + getParamList()
            + setParamLinkedList()
        }
      }
    }

  


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        class helron.foundationwizard.com.datagenerator.DataStructureEnum {
            ~ enumValues : List<String>
            + DataStructureEnum()
            + getEnumValues()
            + setEnumValues()
        }
      }
    }



    namespace elron.foundationwizard.com {
      namespace datagenerator {
        class helron.foundationwizard.com.datagenerator.DataStructureMap {
            - dataMap : Map<String, DataStructure>
            + DataStructureMap()
            + getAssetData()
            + getClassData()
            + getDataMap()
            + getEnumData()
            + isAsset()
            + isClass()
            + isEnum()
        }
      }
    }

  


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        class helron.foundationwizard.com.datagenerator.DataStructureMapGenerator {
            ~ extractedAsset : Map<String, DataStructure>
            ~ extractedClass : Map<String, DataStructure>
            ~ extractedData : Map<String, DataStructure>
            ~ extractedEnum : Map<String, DataStructure>
            ~ extractedStruct : Map<String, DataStructure>
            + DataStructureMapGenerator()
            + getDataSet()
            - checkParamType()
            - generateDataAsset()
            - generateDataClass()
            - generateDataEnum()
            - generateDataSet()
            - generateParams()
        }
      }
    }

  


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        class helron.foundationwizard.com.datagenerator.DataStructureStruct {
            + DataStructureStruct()
        }
      }
    }

  


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        enum DataStructureType {
          ASSET
          ASSET_PROCESSOR
          CLASS
          ENGINECORE
          ENUM
          STRUCTURE
          prefix
        }
      }
    }

  


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        enum ParamType {
          ASSET
          BOOLEAN
          CLASS
          COLOR
          DATATYPE
          ENUM
          FLOAT
          INTEGER
          LINE
          LIST
          MATRIX
          PHYSICS_RAY_RESULT
          POLYGON
          QUATERNION
          STRING
          VEC2D
          VEC2F
          VEC2I
          VEC3D
          VEC3F
          VEC3I
          shortValue
        }
      }
    }

  


    namespace elron.foundationwizard.com {
      namespace datagenerator {
        class helron.foundationwizard.com.datagenerator.Parameter {
            - defaultValue : String
            - description : String
            - id : String
            - input : String
            - values : List<String>
            - wantedDataStructureid : String
            + Parameter()
            + getDefaultValue()
            + getDescription()
            + getId()
            + getInput()
            + getType()
            + getValues()
            + getWantedDataStructureid()
            + isClassType()
            + isFloatType()
            + isIntegerType()
            + isListType()
            + requestAssetType()
            + requestBooleanType()
            + requestClassType()
            + requestEnumType()
            + requestIntegerType()
            + requestListType()
            + requestStringType()
            + setDefaultValue()
            + setDescription()
            + setId()
            + setInput()
            + setType()
            + setValues()
            + setWantedDataStructureid()
        }
      }
    }

  

  helron.foundationwizard.com.datagenerator.DataStructure o-- helron.foundationwizard.com.datagenerator.DataStructureType : dataStructureType
  helron.foundationwizard.com.datagenerator.DataStructureAsset -up-|> helron.foundationwizard.com.datagenerator.DataStructure
  helron.foundationwizard.com.datagenerator.DataStructureClass -up-|> helron.foundationwizard.com.datagenerator.DataStructure
  helron.foundationwizard.com.datagenerator.DataStructureEnum -up-|> helron.foundationwizard.com.datagenerator.DataStructure
  helron.foundationwizard.com.datagenerator.DataStructureMapGenerator o-- helron.foundationwizard.com.datagenerator.DataStructureMap : dataStructureMap
  helron.foundationwizard.com.datagenerator.DataStructureMapGenerator o-- helron.foundationwizard.com.api.ApiStructuresExtractor : structures
  helron.foundationwizard.com.datagenerator.DataStructureStruct -up-|> helron.foundationwizard.com.datagenerator.DataStructureClass
  helron.foundationwizard.com.datagenerator.Parameter o-- helron.foundationwizard.com.datagenerator.ParamType : type


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
